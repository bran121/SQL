-- Automated Data Cleaning
-- Creating a Stored Procedure to insert all our data into a new Table with minor modifications and then creating an event and Trigger to call that Stored Procedure.
DELIMITER $$
DROP PROCEDURE IF EXISTS Copy_and_Clean_Data;
CREATE PROCEDURE Copy_and_Clean_Data()
BEGIN

// Creating a copy of our original data so we can work freely with this data.
CREATE TABLE IF NOT EXISTS 'us_household_income_cleaned'  
(
  'row_id' int DEFAULT NULL,
  'id' int DEFAULT NULL,
'State_Code' int DEFAULT NULL,
'State_Name' text,
'State_ab' text,
'County' text,
'City' text, 
'Place' text,
'Type' text,
'Primary' text,
'Zip_Code' int DEFAULT NULL,
'Area_Code' int DEFAULT NULL,
'ALand' int DEFAULT NULL,
'AWater' int DEFAULT NULL,
'Lat' double DEFAULT NULL,
'Lon' double DEFAULT NULL,
'TimeStamp' TIMESTAMP DEFAULT NULL

) ENGINE = InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- COPY DATA INTO NEW TABLE
INSERT INTO us_household_income_cleaned
SELECT *, CURRENT_TIMESTAMP
FROM bakery.us_household_income;

// Data Cleaning Steps
-- Remove Duplicates
DELETE FROM us_household_income_cleaned 
WHERE 
	row_id IN (
	SELECT row_id
FROM 
(
	SELECT row_id, id, ROW_NUMBER() OVER (PARTITION BY id, 'TimeStamp' ORDER BY id, 'TimeStamp') AS row_num
	FROM us_household_income_cleaned
) duplicates
WHERE 
	row_num > 1
);

-- Fixing Data quality and data standardization
UPDATE us_household_income_cleaned
SET State_Name = 'Georgia'
WHERE State_Name = 'georia';

UPDATE us_household_income_cleaned
SET County = UPPER(County);

UPDATE us_household_income_cleaned
SET City = UPPER(City);

UPDATE us_household_income_cleaned
SET Place = UPPER(Place);

UPDATE us_household_income_cleaned
SET State_Name = UPPER(State_Name);

UPDATE us_household_income_cleaned
SET `Type` = 'CDP'
WHERE `Type` = 'CPD';

UPDATE us_household_income_cleaned
SET `Type` = 'Borough'
WHERE `Type` = 'Boroughs';
END $$
DELIMITER;

CALL Copy_and_Clean_Data();

------------
// This event is created to run the Copy_And_Clean_Data Stored Procedure every 2 minutes.
CREATE EVENT run_data_cleaning
  ON SCHEDULE EVERY 2 MINUTE
  DO CALL Copy_And_Clean_Data();

----------
// This trigger is created to run the Copy_And_Clean_Data Stored Procedure everytime a new item is inserted into the bakery.us_household_income table.
DELIMITER $$
CREATE TRIGGER Transfer_clean_data
  AFTER INSERT ON bakery.us_household_income
  FOR EACH ROW
BEGIN
  CALL Copy_and_Clean_Data();
END $$
DELIMITER;

